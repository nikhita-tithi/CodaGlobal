{"version":3,"sources":["components/card.jsx","components/circlesInfo.jsx","components/like.jsx","components/ratings.jsx","containers/sub-containers/commentForm.jsx","containers/sub-containers/detailsInfo.jsx","containers/sub-containers/listingContainer.jsx","containers/sub-containers/listingHeader.jsx","containers/sub-containers/quickView.jsx","containers/listing.jsx","store/actions.js","containers/details.jsx","App.js","serviceWorker.js","store/reducer.js","store/saga.js","store/index.js","index.js"],"names":["CardComponent","props","id","name","image","category","description","Img","Card","Body","Title","Text","Subtitle","React","useState","show","setShow","history","useHistory","border","style","margin","backgroundColor","color","variant","src","height","className","Button","onClick","push","Modal","onHide","centered","CirclesInfo","info","Object","entries","map","key","value","textAlign","borderRadius","width","display","alignItems","padding","marginBottom","fontSize","LikeIcon","liked","setLiked","cursor","Ratings","rating","stars","i","Badge","Commentsection","paddingTop","marginTop","borderTop","placeholder","outline","DetailsInfo","circlesInfo","Fragment","ListingContainer","data","Container","Row","CardColumns","cardData","ListingHeader","handleSearch","Navbar","bg","Brand","type","onChange","e","target","QuickView","Dialog","Header","detailsInfoProps","closeButton","ListingPage","dispatch","useDispatch","useEffect","recipes","useSelector","rootReducer","isLoading","filteredData","inputValue","filterData","filter","obj","toLowerCase","includes","console","log","payload","updateFilteredData","length","DetailsPage","useRouteMatch","params","Number","marginRight","Col","md","Image","rounded","flexDirection","paddingLeft","App","path","component","Boolean","window","location","hostname","match","initialState","error","requestRecipiesList","watchRootSaga","generateRandomNumber","min","max","Math","floor","random","fetch","then","json","ingrediants","bucks","minutes","response","put","JSON","stringify","message","takeLatest","combineReducers","state","action","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6cfa4586.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Modal } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { QuickView } from \"../containers/sub-containers\";\r\n\r\nexport const CardComponent = (props) => {\r\n  const { id, name, image, category, description } = props;\r\n  const { Img, Body, Title, Text, Subtitle } = Card;\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const history = useHistory();\r\n  return (\r\n    <Card\r\n      border=\"dark\"\r\n      style={{ margin: \"5px auto\", backgroundColor: \"black\", color: \"white\" }}\r\n    >\r\n      <Img variant=\"top\" src={image} height=\"50%\" />\r\n      <Body className=\"my-card-body\">\r\n        <Title>{name}</Title>\r\n        <Subtitle className=\"mb-2 text-muted\">{category}</Subtitle>\r\n        <Text>{description}</Text>\r\n        <Button\r\n          variant=\"outline-light\"\r\n          style={{ margin: \"5px\" }}\r\n          onClick={() => handleShow()}\r\n        >\r\n          Quick view\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-light\"\r\n          style={{ margin: \"5px\" }}\r\n          onClick={() => history.push(`/details/${id}`)}\r\n        >\r\n          View more\r\n        </Button>\r\n      </Body>\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <QuickView {...props} />\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CirclesInfo = ({ info }) => {\r\n  return (\r\n    <div>\r\n      {Object.entries(info).map(([key, value]) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              backgroundColor: \"black\",\r\n              borderRadius: \"50%\",\r\n              color: \"white\",\r\n              width: \"100px\",\r\n              height: \"100px\",\r\n              display: \"inline-block\",\r\n              alignItems: \"center\",\r\n              padding: \"20px 0\",\r\n              margin: \"10px\",\r\n            }}\r\n          >\r\n            <h3 style={{ marginBottom: 0 }}>{value}</h3>\r\n            <p style={{ fontSize: \"small\" }}>{key}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\r\n\r\nexport const LikeIcon = () => {\r\n  const [liked, setLiked] = React.useState(true);\r\n\r\n  if (liked) {\r\n    return (\r\n      <FaHeart\r\n        color=\"red\"\r\n        style={{ margin: \"-5px 0 0 10px\", cursor: \"pointer\" }}\r\n        onClick={() => setLiked(!liked)}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <FaRegHeart\r\n      style={{ margin: \"-5px 0 0 10px\", cursor: \"pointer\" }}\r\n      onClick={() => setLiked(!liked)}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { FaStar } from \"react-icons/fa\";\r\n\r\nexport const Ratings = ({ rating }) => {\r\n  const stars = [];\r\n  for (let i = 1; i <= rating; i++) {\r\n    stars.push(\r\n      <FaStar color=\"gold\" style={{ margin: \"5px\" }} key={`star-${i}`} />\r\n    );\r\n  }\r\n  return (\r\n    <span style={{ fontSize: \"large\" }}>\r\n      <Badge variant=\"secondary\" style={{ margin: \"5px\" }}>\r\n        {rating}/5\r\n      </Badge>\r\n      {stars}\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Commentsection = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: \"20px\",\r\n        marginTop: \"20px\",\r\n        borderTop: \"1px solid black\",\r\n      }}\r\n    >\r\n      <div>\r\n        <textarea\r\n          placeholder=\"Enter Your Comments\"\r\n          style={{\r\n            height: \"100px\",\r\n            width: \"400px\",\r\n            outline: \"none\",\r\n            backgroundColor: \"white\",\r\n            fontSize: \"large\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button\r\n          style={{\r\n            width: \"100%\",\r\n            color: \"white\",\r\n            outline: \"none\",\r\n            backgroundColor: \"black\",\r\n            fontSize: \"large\",\r\n          }}\r\n        >\r\n          Add Comment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { LikeIcon, Ratings, CirclesInfo } from \"../../components\";\r\nimport { Commentsection } from \"./commentForm\";\r\n\r\nexport const DetailsInfo = (props) => {\r\n  const { name, description, rating, circlesInfo } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <h1>{name}</h1>\r\n      <Ratings rating={rating} />\r\n      <p>DESCRIPTION</p>\r\n      <p style={{ textAlign: \"right\" }}>\r\n        {description}\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. In iaculis nunc sed\r\n        augue lacus viverra vitae. Nullam vehicula ipsum a arcu cursus vitae\r\n        congue. Quisque sagittis purus sit amet volutpat consequat mauris nunc.\r\n      </p>\r\n      <CirclesInfo info={circlesInfo} />\r\n      <h4>\r\n        {\"FAVOURITE THIS RECIPE\"}\r\n        <LikeIcon />\r\n      </h4>\r\n      <Commentsection />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CardComponent } from \"../../components\";\r\nimport { Container, Row, CardColumns } from \"react-bootstrap\";\r\n\r\nexport const ListingContainer = ({ data }) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <CardColumns>\r\n          {data.map((cardData) => (\r\n            <CardComponent {...cardData} key={cardData.id} />\r\n          ))}\r\n        </CardColumns>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nexport const ListingHeader = ({ handleSearch }) => {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <h2>Pizza & Noodles</h2>\r\n        </Navbar.Brand>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n        />\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { DetailsInfo } from \"./detailsInfo\";\r\n\r\nexport const QuickView = (props) => {\r\n  const { name, description, rating, circlesInfo } = props;\r\n  const { Dialog, Header, Title, Body } = Modal;\r\n  const detailsInfoProps = {\r\n    name,\r\n    description,\r\n    rating,\r\n    circlesInfo,\r\n  };\r\n  return (\r\n    <Dialog style={{ margin: 0 }}>\r\n      <Header closeButton>\r\n        <Title>RECIPE</Title>\r\n      </Header>\r\n\r\n      <Body style={{ textAlign: \"center\" }}>\r\n        <DetailsInfo {...detailsInfoProps} />\r\n      </Body>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getRecipesList, updateFilteredData } from \"../store/actions\";\r\nimport { ListingHeader, ListingContainer } from \"./sub-containers\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst ListingPage = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRecipesList());\r\n  }, [dispatch]);\r\n\r\n  const { recipes } = useSelector((rootReducer) => rootReducer);\r\n  const { isLoading, data, filteredData } = recipes;\r\n\r\n  const handleSearch = (inputValue) => {\r\n    const filterData = data.filter((obj) =>\r\n      obj.name.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n    console.log(inputValue, filterData);\r\n    dispatch(updateFilteredData(filterData));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ListingHeader handleSearch={handleSearch} />\r\n      {filteredData.length === 0 ? (\r\n        <h2 style={{ textAlign: \"center\", padding: \"20px\" }}> NO DATA</h2>\r\n      ) : (\r\n        <ListingContainer data={filteredData ?? data} isLoading={isLoading} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListingPage;\r\n","export const getRecipesList = () => ({\r\n  type: \"GET_RECIPES_LIST\",\r\n});\r\n\r\nexport const getRecipesListSuccess = (data) => ({\r\n  type: \"GET_RECIPES_LIST_SUCCESS\",\r\n  payload: data,\r\n});\r\n\r\nexport const getRecipesListError = (error) => ({\r\n  type: \"GET_RECIPES_LIST_ERROR\",\r\n  payload: error,\r\n});\r\n\r\nexport const updateFilteredData = (data) => ({\r\n  type: \"UPDATE_FILTERED_DATA\",\r\n  payload: data,\r\n});\r\n","import React from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport { DetailsInfo } from \"./sub-containers\";\r\n\r\nconst DetailsPage = () => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  const { id } = match.params;\r\n  const {\r\n    recipes: { data },\r\n  } = useSelector((rootReducer) => rootReducer);\r\n\r\n  const DetailsData = data.filter((obj) => obj.id === Number(id));\r\n  const { name, image, description, rating, circlesInfo } = DetailsData[0];\r\n  const detailsInfoProps = {\r\n    name,\r\n    description,\r\n    rating,\r\n    circlesInfo,\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row style={{ marginBottom: \"10px\" }}>\r\n        <span onClick={() => history.push(\"/\")} style={{ cursor: \"pointer\" }}>\r\n          <FaArrowLeft style={{ marginRight: \"10px\" }} />\r\n          Go Back\r\n        </span>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Row>\r\n            <Image src={image} rounded width=\"100%\" />\r\n          </Row>\r\n          <Row>\r\n            <h4>Ingredients :</h4>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. In\r\n              iaculis nunc sed augue lacus viverra vitae. Nullam vehicula ipsum\r\n              a arcu cursus vitae congue. Quisque sagittis purus sit amet\r\n              volutpat consequat mauris nunc. Ullamcorper dignissim cras\r\n              tincidunt lobortis feugiat vivamus at. Sodales ut etiam sit amet\r\n              nisl purus in mollis. Quis eleifend quam adipiscing vitae proin\r\n              sagittis nisl rhoncus. Nulla pellentesque dignissim enim sit.\r\n            </p>\r\n            <h4>How to Prepare :</h4>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. In\r\n              iaculis nunc sed augue lacus viverra vitae. Nullam vehicula ipsum\r\n              a arcu cursus vitae congue. Quisque sagittis purus sit amet\r\n              volutpat consequat mauris nunc. Ullamcorper dignissim cras\r\n              tincidunt lobortis feugiat vivamus at. Sodales ut etiam sit amet\r\n              nisl purus in mollis. Quis eleifend quam adipiscing vitae proin\r\n              sagittis nisl rhoncus. Nulla pellentesque dignissim enim sit.\r\n            </p>\r\n          </Row>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-end\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            <DetailsInfo {...detailsInfoProps} />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DetailsPage;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ListingPage from \"./containers/listing\";\nimport DetailsPage from \"./containers/details\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/details/:id\" component={DetailsPage} />\n      <Route path=\"/\" component={ListingPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  error: \"\",\r\n  filteredData: [],\r\n};\r\n\r\nexport const recipeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_RECIPES_LIST\":\r\n      return { ...state, isLoading: true };\r\n    case \"GET_RECIPES_LIST_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        filteredData: action.payload,\r\n      };\r\n    case \"GET_RECIPES_LIST_ERROR\":\r\n      return { ...state, isLoading: false, error: action.payload };\r\n    case \"UPDATE_FILTERED_DATA\":\r\n      return { ...state, filteredData: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { takeLatest, put } from \"redux-saga/effects\";\r\nimport { getRecipesListSuccess, getRecipesListError } from \"./actions\";\r\n\r\nconst generateRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport function* requestRecipiesList() {\r\n  try {\r\n    const response = yield fetch(\"http://starlord.hackerearth.com/recipe\")\r\n      .then((data) => data.json())\r\n      .then((json) => {\r\n        return json.map((obj) => ({\r\n          ...obj,\r\n          rating: generateRandomNumber(1, 5),\r\n          circlesInfo: {\r\n            ingrediants: generateRandomNumber(5, 15),\r\n            bucks: generateRandomNumber(100, 999),\r\n            minutes: generateRandomNumber(10, 59),\r\n          },\r\n        }));\r\n      });\r\n    console.log(response);\r\n    yield put(getRecipesListSuccess(response));\r\n  } catch (error) {\r\n    yield put(getRecipesListError(JSON.stringify(error.message)));\r\n  }\r\n}\r\n\r\nexport function* watchRootSaga() {\r\n  yield takeLatest(\"GET_RECIPES_LIST\", requestRecipiesList);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { recipeReducer } from \"./reducer\";\r\nimport { watchRootSaga } from \"./saga\";\r\n\r\nconst rootReducer = combineReducers({ recipes: recipeReducer });\r\nconst saga = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(saga));\r\n\r\nsaga.run(watchRootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}